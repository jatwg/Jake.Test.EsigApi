<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Trace"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt"
      throwConfigExceptions="true">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
    <add assembly="NLog.Database"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="allfile" 
            fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

    <!-- Console Target for hosting lifetime messages -->
    <target xsi:type="Console" name="lifetimeConsole" 
            layout="${MicrosoftConsoleLayout}" />

    <!-- SQL Server Target -->
    <target name="database" xsi:type="Database">
      <connectionString>${configsetting:name=ConnectionStrings.DefaultConnection}</connectionString>
      
      <commandText>
        INSERT INTO dbo.Logs (
          MachineName, Logged, Level, Message,
          Logger, Exception, Properties
        ) VALUES (
          @MachineName, @Logged, @Level, @Message,
          @Logger, @Exception, @Properties
        );
      </commandText>

      <parameter name="@MachineName" layout="${machinename}" />
      <parameter name="@Logged" layout="${date}" />
      <parameter name="@Level" layout="${level}" />
      <parameter name="@Message" layout="${message}" />
      <parameter name="@Logger" layout="${logger}" />
      <parameter name="@Exception" layout="${exception:tostring}" />
      <parameter name="@Properties" layout="${all-event-properties:separator=|}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs to file, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!--Skip Microsoft.AspNetCore logs from database-->
    <logger name="Microsoft.AspNetCore.*" final="true" />

    <!--Skip Microsoft.Hosting logs from database-->
    <logger name="Microsoft.Hosting.*" final="true" />

    <!--Skip BrowserLink logs from database-->
    <logger name="Microsoft.WebTools.BrowserLink.Net.*" final="true" />

    <!--Database logs with higher minimum level-->
    <logger name="*" minlevel="Debug" writeTo="database" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
  </rules>
</nlog> 